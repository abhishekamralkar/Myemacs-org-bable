#+STARTUP: overview
#+TITLE: MyEmacs
#+CREATOR: Abhishek Anand Amralkar
#+LANGUAGE: en
#+OPTIONS: num:nil
#+ATTR_HTML: :style margin-left: auto; margin-right: auto;
#+PROPERTY: header-args:emacs-lisp :tangle ./init.el :mkdirp yes

* Installation

git clone https://github.com/abhishekamralkar/Myemacs-org-bable ~/.emacs.d

To use you should remove your own ~/.emacs and your ~/.emacs.d prior to cloning this configuration. 

* About Me

#+begin_src emacs-lisp
(setq user-full-name "Abhishek Anand Amralkar"
  user-mail-address "abhishekamralkar@gmail.com")
#+end_src

* Use-Package

The use-package macro allows you to isolate package configuration in your .emacs file in a way that is both performance-oriented and, well, tidy. 

#+begin_src emacs-lisp
  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			    ("org"   . "https://orgmode.org/elpa/")
			    ("elpa"  . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

	  (require 'use-package)
	  (setq use-package-always-ensure t)
	  (require 'org-tempo)
#+end_src

* Automatic Package Updates

With auto-package-update package we can keep emacs upto date

#+begin_src emacs-lisp
(use-package auto-package-update
  :custom
  (auto-package-update-interval 7)
  (auto-package-update-prompt-before-update t)
  (auto-package-update-hide-results t)
  :config
  (auto-package-update-maybe)
  (auto-package-update-at-time "09:00"))
#+end_src

* Theme and Font

Using Doom Emacs theme 

#+begin_src emacs-lisp
(use-package doom-themes
  :defer t
  :init (load-theme 'doom-palenight t))
#+end_src

Using JetBrains fonts

#+begin_src emacs-lisp
(set-face-attribute 'default nil :font "JetBrains Mono NL" :height 140 :weight 'regular)
;; Set the fixed pitch face
(set-face-attribute 'fixed-pitch nil :font "JetBrains Mono NL" :height 140 :weight 'regular)
;; Set the variable pitch face
(set-face-attribute 'variable-pitch nil :font "JetBrains Mono NL" :height 140 :weight 'regular)
#+end_src

#+begin_src emacs-lisp
(use-package ac-emoji
  :ensure t)
#+end_src

* Emacs UI Configuration

** no startup screen

#+begin_src emacs-lisp
(setq inhibit-startup-message t)
#+end_src

** no toolbar

#+begin_src emacs-lisp
(tool-bar-mode -1)
#+end_src

** No menubar

#+begin_src emacs-lisp
(menu-bar-mode -1)
#+end_src

** No scrollbar

#+begin_src emacs-lisp
(scroll-bar-mode -1)
#+end_src

** No ringing bells

#+begin_src emacs-lisp
(setq ring-bell-function 'ignore)  
#+end_src

** utf-8 encoding

#+begin_src emacs-lisp
(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)   
#+end_src

** no backup please!

#+begin_src emacs-lisp
(setq make-backup-files nil)
(setq auto-save-default nil)   
#+end_src

** y for yes and n for no

#+begin_src emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+end_src

** dashboard

#+begin_src emacs-lisp
(use-package dashboard
  :ensure t
  :config
    (dashboard-setup-startup-hook))
#+end_src

#+begin_src emacs-lisp
;; Set the title
(setq dashboard-banner-logo-title "Welcome to AAA Emacs ")

;; Content is not centered by default. To center, set
(setq dashboard-center-content t)

;; To disable shortcut "jump" indicators for each section, set
(setq dashboard-show-shortcuts nil)

(setq dashboard-items '((recents  . 5)
                        (bookmarks . 5)
                        (projects . 5)
                        (agenda . 5)
                        (registers . 5)))
#+end_src

** modeline

With modeline we can enhance the Emacs look and feel. Spacemacs spaceline is awesome. I tried spaceline but doom-modeline is best. This package is able to display icons
if all-the-icons packageand required fonts are installed.Run M-x all-the-icons-install-fonts to install the necessary fonts. Please refer to the installation guide.

#+begin_src emacs-lisp
(use-package doom-modeline
  :ensure t
  :init (doom-modeline-mode 1)
  :custom ((doom-modeline-height 15)))
#+end_src

#+begin_src emacs-lisp
(use-package all-the-icons
  :ensure t)
#+end_src

#+begin_src emacs-lisp
(use-package nerd-icons
    :ensure t)
#+end_src

** cursor position

Show the current line and column for your cursor.

#+begin_src emacs-lisp
(setq line-number-mode t)
(setq column-number-mode t)   
#+end_src

** which-key

which-key is a minor mode for Emacs that displays the key bindings following your currently entered incomplete command (a prefix) in a popup.
For example, after enabling the minor mode if you enter C-x and wait for the default of 1 second the minibuffer will expand with all of the
available key bindings that follow C-x (or as many as space allows given your settings).

#+begin_src emacs-lisp
(use-package which-key
  :ensure t
  :config
  (which-key-mode))   
#+end_src

